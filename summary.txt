***************************
SET GAME
***************************
By: Eva Herzog, Patrick Lin, & Andrew Molchan

+++++++++++++++++++++++++++
Project Summary
+++++++++++++++++++++++++++
We made a virtual version of the fun logic game, SET. The game involves a deck of 81 cards, which are dealt to the board 12 at a time (usually). The goal of the game is to identify "sets", which are defined in a specific way according to the game rules.

Our game includes one-player and two-player options. We implemented a few differences from the original game. For example, having a virtual version allowed us to provide a "get a hint" function. Our two-player version has players take turns whereas, in the original game, players all play simultaneously and try to find sets faster than their opponents.

+++++++++++++++++++++++++++
Work Breakdown
+++++++++++++++++++++++++++
Below each person's name is a list of tasks he/she worked on.

;;;;;;;;;;;;;;;;;;
Eva Herzog
;;;;;;;;;;;;;;;;;;

~Framework & design of the GUI
~Game control buttons (except for functionality that interacted with the Cards)
~Player names & scores display
~Interaction between countdown timer and all related functionality
~Message dialog boxes, including all the How To Play information
~JPG and PNG creation
~"Downsizing" - getting the board back down to 12 cards after it goes up to 15
~Commenting & some DRYing out

;;;;;;;;;;;;;;;;;;
Patrick Lin
;;;;;;;;;;;;;;;;;;






;;;;;;;;;;;;;;;;;;
Andrew Molchan
;;;;;;;;;;;;;;;;;;
~Action listeners for card JButtons
~Logic for 1-player and 2-player game flow (integrating information from GUI with back-end methods that determine if a “set” has been selected)
~Methods to handle when a user selects a card
~Logic to handle when a user “de-selects” a card
~Logic to appropriately handle endgame scenario (i.e. when card deck reaches 0 cards)
~Integration of methods to ensure that game board always has a selectable set
~Methods to update GUI based on relevant changes to data model (e.g. when a card changes state from “flipped” to “unflipped”, when a player’s turn changes, etc.)
~Testing classes

+++++++++++++++++++++++++++
Github Repo Link
+++++++++++++++++++++++++++
https://github.com/cit-upenn/cit-591-projects-fall-2016-resume_driven_developers

For the record, our team name on Github is a joke :)
